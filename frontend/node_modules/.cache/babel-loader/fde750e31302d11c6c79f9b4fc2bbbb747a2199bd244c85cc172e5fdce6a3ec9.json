{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// State to hold user input for players and match results\nconst[playerA,setPlayerA]=useState('');const[playerB,setPlayerB]=useState('');const[result,setResult]=useState('');const[message,setMessage]=useState('');const[leaderboard,setLeaderboard]=useState([]);// Handle input changes\nconst handleChange=e=>{const{name,value}=e.target;if(name==='playerA'){setPlayerA(value);}else if(name==='playerB'){setPlayerB(value);}else if(name==='result'){setResult(value);}};// Handle form submission to update ratings\nconst handleSubmit=async e=>{e.preventDefault();const data={player_a:playerA,player_b:playerB,result:parseFloat(result)// Convert result to number\n};try{// Send the match data to the backend (Flask)\nconst response=await fetch('http://localhost:5001/update_rating',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});const result=await response.json();if(response.ok){setMessage(result.message);// Success message\nfetchLeaderboard();// Fetch updated leaderboard\n}else{setMessage(result.error);// Error message\n}}catch(error){console.error('Error updating rating:',error);setMessage('An error occurred while updating the rating.');}};// Fetch leaderboard from the backend\nconst fetchLeaderboard=async()=>{try{const response=await fetch('http://localhost:5001/leaderboard');const leaderboardData=await response.json();setLeaderboard(Object.entries(leaderboardData).map(_ref=>{let[name,rating]=_ref;return{name,rating};}));}catch(error){console.error('Error fetching leaderboard:',error);}};// Load leaderboard on initial render\nReact.useEffect(()=>{fetchLeaderboard();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Elo Tracker\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"playerA\",children:\"Player A:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"playerA\",name:\"playerA\",value:playerA,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"playerB\",children:\"Player B:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"playerB\",name:\"playerB\",value:playerB,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"result\",children:\"Result:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"result\",value:result,onChange:handleChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Result\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"Player A Wins\"}),/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"Player B Wins\"}),/*#__PURE__*/_jsx(\"option\",{value:\"0.5\",children:\"Draw\"})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update Rating\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"h2\",{children:\"Leaderboard\"}),/*#__PURE__*/_jsx(\"ul\",{children:leaderboard.map(player=>/*#__PURE__*/_jsxs(\"li\",{children:[player.name,\": \",player.rating]},player.name))})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","App","playerA","setPlayerA","playerB","setPlayerB","result","setResult","message","setMessage","leaderboard","setLeaderboard","handleChange","e","name","value","target","handleSubmit","preventDefault","data","player_a","player_b","parseFloat","response","fetch","method","headers","body","JSON","stringify","json","ok","fetchLeaderboard","error","console","leaderboardData","Object","entries","map","_ref","rating","className","children","onSubmit","htmlFor","type","id","onChange","required","player"],"sources":["/Users/phillipgifford/Desktop/ELO-tracker/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  // State to hold user input for players and match results\n  const [playerA, setPlayerA] = useState('');\n  const [playerB, setPlayerB] = useState('');\n  const [result, setResult] = useState('');\n  const [message, setMessage] = useState('');\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  // Handle input changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'playerA') {\n      setPlayerA(value);\n    } else if (name === 'playerB') {\n      setPlayerB(value);\n    } else if (name === 'result') {\n      setResult(value);\n    }\n  };\n\n  // Handle form submission to update ratings\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const data = {\n      player_a: playerA,\n      player_b: playerB,\n      result: parseFloat(result), // Convert result to number\n    };\n\n    try {\n      // Send the match data to the backend (Flask)\n      const response = await fetch('http://localhost:5001/update_rating', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        setMessage(result.message);  // Success message\n        fetchLeaderboard();          // Fetch updated leaderboard\n      } else {\n        setMessage(result.error);    // Error message\n      }\n    } catch (error) {\n      console.error('Error updating rating:', error);\n      setMessage('An error occurred while updating the rating.');\n    }\n  };\n\n  // Fetch leaderboard from the backend\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/leaderboard');\n      const leaderboardData = await response.json();\n      setLeaderboard(Object.entries(leaderboardData).map(([name, rating]) => ({ name, rating })));\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n    }\n  };\n\n  // Load leaderboard on initial render\n  React.useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n\n  return (\n   \n    <div className=\"App\">\n      <h1>Elo Tracker</h1>\n\n      {/* Form to submit match results */}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"playerA\">Player A:</label>\n          <input\n            type=\"text\"\n            id=\"playerA\"\n            name=\"playerA\"\n            value={playerA}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"playerB\">Player B:</label>\n          <input\n            type=\"text\"\n            id=\"playerB\"\n            name=\"playerB\"\n            value={playerB}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"result\">Result:</label>\n          <select\n            name=\"result\"\n            value={result}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\">Select Result</option>\n            <option value=\"1\">Player A Wins</option>\n            <option value=\"0\">Player B Wins</option>\n            <option value=\"0.5\">Draw</option>\n          </select>\n        </div>\n        <button type=\"submit\">Update Rating</button>\n      </form>\n\n      {/* Message display */}\n      {message && <p>{message}</p>}\n\n      {/* Display the leaderboard */}\n      <h2>Leaderboard</h2>\n      <ul>\n        {leaderboard.map((player) => (\n          <li key={player.name}>\n            {player.name}: {player.rating}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}